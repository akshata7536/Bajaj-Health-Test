package com.app;

public class Main {
    public static void main(String[] args) {
        if (args.length != 2) {
            System.out.println("Usage: java -jar test.jar <PRN_Number> <Path_to_JSON_File>");
            return;
        }

        String prnNumber = args[0].toLowerCase().replaceAll("\\s+", ""); // Ensure lowercase and no spaces
        String jsonFilePath = args[1];

        try {
            // Parse the JSON file
            JSONObject jsonObject = new JSONObject(new FileReader(new File(jsonFilePath)));

            // Find the first occurrence of "destination"
            String destinationValue = findDestinationValue(jsonObject);
            if (destinationValue == null) {
                System.out.println("Key 'destination' not found in the JSON file.");
                return;
            }

            // Generate a random alphanumeric string
            String randomString = generateRandomString(8);

            // Concatenate PRN number, destination value, and random string
            String concatenatedString = prnNumber + destinationValue + randomString;

            // Generate MD5 hash
            String hash = generateMD5Hash(concatenatedString);

            // Output the result in the format hash;random_string
            System.out.println(hash + ";" + randomString);

        } catch (IOException e) {
            System.out.println("Error reading the JSON file: " + e.getMessage());
        } catch (Exception e) {
            System.out.println("An error occurred: " + e.getMessage());
        }
    }

    private static String findDestinationValue(JSONObject jsonObject) {
        Iterator<String> keys = jsonObject.keys();
        while (keys.hasNext()) {
            String key = keys.next();
            Object value = jsonObject.get(key);

            if (key.equals("destination")) {
                return value.toString();
            } else if (value instanceof JSONObject) {
                String result = findDestinationValue((JSONObject) value);
                if (result != null) return result;
            }
        }
        return null; // "destination" key not found
    }

    private static String generateRandomString(int length) {
        String characters = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
        Random random = new Random();
        StringBuilder sb = new StringBuilder(length);
        for (int i = 0; i < length; i++) {
            sb.append(characters.charAt(random.nextInt(characters.length())));
        }
        return sb.toString();
    }

    private static String generateMD5Hash(String input) throws NoSuchAlgorithmException {
        MessageDigest md = MessageDigest.getInstance("MD5");
        byte[] digest = md.digest(input.getBytes(StandardCharsets.UTF_8));
        StringBuilder sb = new StringBuilder();
        for (byte b : digest) {
            sb.append(String.format("%02x", b));
        }
        return sb.toString();
    }
}
